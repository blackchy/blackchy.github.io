<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>GitHub发布Library，compile使用</title>
      <link href="/2018/12/19/2018-12-19-Public-Library/"/>
      <url>/2018/12/19/2018-12-19-Public-Library/</url>
      
        <content type="html"><![CDATA[<p>把自己习惯使用的工具类放到一个公共库中并在Github上发布，然后在AndroidStudio的项目中依赖使用，这是一件很方便的事。<br><a id="more"></a></p><h3 id="项目相关"><a href="#项目相关" class="headerlink" title="项目相关"></a>项目相关</h3><ol><li>本地创建好项目之后，删掉多余无用的东西，然后新建一个Module(Android Library)，把代码写在这个module中，原来的app module就没什么用了。</li><li><p>在项目根目录的build.gradle中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">classpath &apos;com.github.dcendents:android-maven-gradle-plugin:1.5&apos;</span><br></pre></td></tr></table></figure><p>如图所示：<br><img src="/uploads/public_library/root_gradle.png" alt="img"></p></li><li><p>在新建的module目录的build.gradle中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: &apos;com.github.dcendents.android-maven&apos;</span><br><span class="line">group = &apos;com.github.blackchy&apos;</span><br></pre></td></tr></table></figure><p>如图所示：<br><img src="/uploads/public_library/module_gradle.png" alt="img"><br>并把android里面的无用配置和dependencies里面的无用依赖全部删掉。</p></li></ol><h3 id="Github相关"><a href="#Github相关" class="headerlink" title="Github相关"></a>Github相关</h3><ol><li>在Github新建一个远程仓库，然后把本地仓库上传同步到远程仓库中。</li><li>去github上发布这个公共库的代码。<br><img src="/uploads/public_library/github_1.png" alt="img"><br><img src="/uploads/public_library/github_2.png" alt="img"><br><img src="/uploads/public_library/github_3.png" alt="img"><br><img src="/uploads/public_library/github_4.png" alt="img"></li></ol><h3 id="发布依赖"><a href="#发布依赖" class="headerlink" title="发布依赖"></a>发布依赖</h3><p>这里通过<a href="https://jitpack.io/" target="_blank" rel="noopener">JitPack</a>发布依赖。</p><ol><li>打开<a href="https://jitpack.io/" target="_blank" rel="noopener">JitPack</a>的首页，并登录(github账号登录)。</li><li>把代码发布好的github仓库地址复制到输入框并点击Look up按钮。<br><img src="/uploads/public_library/jitpack_1.png" alt="img"><br><img src="/uploads/public_library/jitpack_2.png" alt="img"><br>等Log的圈圈转完以后，表示发布完成其他项目已经可以依赖使用这个公共库了，点击Get it按钮跳转到具体依赖方法。<br><img src="/uploads/public_library/jitpack_3.png" alt="img"></li></ol><hr><p><strong>完</strong></p>]]></content>
      
      
      <categories>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>AndroidTV入门</title>
      <link href="/2018/12/18/2018-12-18-AndroidTV/"/>
      <url>/2018/12/18/2018-12-18-AndroidTV/</url>
      
        <content type="html"><![CDATA[<p>机顶盒现在基本都是通过安装的APK进行操作的，这些APK又分为EPG(Android嵌套Web，主要为Web端开发)和AndroidTV原生(主要为Android开发)，本文介绍AndroidTV开发入门流程。AndroidTV和手机App开发的主要区别就是它的布局是按照横屏显示器布局的，而且它是焦点控制（手机App主要是屏幕点击控制），在音视频方面比手机App需要注意更多的细节，以及其他一些小问题。还有比较重要的一点，AndroidTV需要考虑更多硬件的问题以及适配更老的Android版本，甚至是4.4以前的版本都有可能需要考虑。<br><a id="more"></a></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>大多数机顶盒的版本都比较低，所以AndroidStudio不推荐使用3.0（推荐2.3.3）及以上的版本进行开发，还有jdk版本也是一样（1.8足够了），所以记得复制别人代码的时候把lambda表达式改成常规的表达式，等等等等。</p><h3 id="适配"><a href="#适配" class="headerlink" title="适配"></a>适配</h3><ol><li><p>文字间距等布局时统一使用pt作为单位，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView</span><br><span class="line">      android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">      android:layout_height=&quot;30pt&quot;</span><br><span class="line">      android:gravity=&quot;center&quot;</span><br><span class="line">      android:paddingLeft=&quot;10pt&quot;</span><br><span class="line">      android:paddingRight=&quot;10pt&quot;</span><br><span class="line">      android:text=&quot;Text&quot;</span><br><span class="line">      android:textColor=&quot;@color/colorWhite&quot;</span><br><span class="line">      android:textSize=&quot;20pt&quot;</span><br><span class="line">      /&gt;</span><br></pre></td></tr></table></figure></li><li><p>屏幕适配则使用<a href="https://github.com/JessYanCoding/AndroidAutoSize" target="_blank" rel="noopener">JessYan的Android适配方案</a>，首先添加依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile &apos;me.jessyan:autosize:1.0.6&apos;</span><br></pre></td></tr></table></figure><p>然后在自定义<code>Applicatio</code>的<code>create</code>方法中添加适配：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AutoSizeConfig.getInstance().getUnitsManager().setSupportDP(false).setSupportSubunits(Subunits.PT);</span><br></pre></td></tr></table></figure><p>最后，代码中需要转换的地方则用<code>AutoSizeUtils</code>里面的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class="line">    AutoSizeUtils.pt2px(context, 20));</span><br></pre></td></tr></table></figure><p>当然，肯定还有其他更好的适配方式。</p></li></ol><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>AndroidTV开发中经常用到列表这种布局，这里有两种方法。</p><ol><li><p>Google提供的<a href="https://github.com/googlesamples/androidtv-Leanback" target="_blank" rel="noopener">androidtv-Leanback</a>。<br>布局文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;com.example.core.leanback.HorizontalGridView</span><br><span class="line">    android:id=&quot;@+id/hgv_item&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_marginTop=&quot;100pt&quot;</span><br><span class="line">    android:clipChildren=&quot;false&quot;</span><br><span class="line">    android:clipToPadding=&quot;false&quot;</span><br><span class="line">    android:padding=&quot;20pt&quot;</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p>其中<code>android:clipChildren=&quot;false&quot;</code>和<code>android:clipToPadding=&quot;false&quot;</code>是为了做选中放大子视图时避免子视图不完整。</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">//@BindView(R.id.hgv_item) HorizontalGridView hgvItem;</span><br><span class="line">//private ListItemAdapter listItemAdapter;</span><br><span class="line">listItemAdapter = new ListItemAdapter();</span><br><span class="line">hgvItem.setAdapter(listItemAdapter);</span><br><span class="line">hgvItem.setHorizontalSpacing(AutoSizeUtils.pt2px(context, 20));</span><br><span class="line">hgvItem.setOnItemListener(new OnItemListener() &#123;</span><br><span class="line">  @Override public void onItemSelected(Object parent, View itemView, int position) &#123;</span><br><span class="line">    itemView.animate()</span><br><span class="line">        .scaleX(1.05f)</span><br><span class="line">        .scaleY(1.05f)</span><br><span class="line">        .setInterpolator(new BounceInterpolator())</span><br><span class="line">        .setDuration(300)</span><br><span class="line">        .start();</span><br><span class="line">    itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override public void onItemPreSelected(Object parent, View itemView, int position) &#123;</span><br><span class="line">    itemView.animate()</span><br><span class="line">        .scaleX(1.0f)</span><br><span class="line">        .scaleY(1.0f)</span><br><span class="line">        .setInterpolator(new BounceInterpolator())</span><br><span class="line">        .setDuration(300)</span><br><span class="line">        .start();</span><br><span class="line">    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">listItemAdapter.setNewData(mockData.listItems);</span><br></pre></td></tr></table></figure><p>其中，<code>setHorizontalSpacing</code>方法为设置子视图之间的水平间距，<code>setOnItemListener</code>为子视图获得焦点和失去焦点的监听，<code>setOnItemListener</code>监听中添加了获得焦点的子视图放大1.05倍的动画和改变子视图背景使获得焦点的子视图视觉上更明显的效果。具体效果如下图：<br><img src="/uploads/androidtv/andridtv_gh_list.gif" alt="img"></p><p><code>Adapter</code>类:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class ListItemAdapter extends BaseQuickAdapter&lt;String, BaseViewHolder&gt; &#123;</span><br><span class="line">  public ListItemAdapter() &#123;</span><br><span class="line">    super(R.layout.item_list);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override protected void convert(BaseViewHolder helper, String item) &#123;</span><br><span class="line">    helper.setText(R.id.tv_text, item);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子视图布局文件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:focusable=&quot;true&quot;</span><br><span class="line">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class="line">    android:padding=&quot;2pt&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;FrameLayout</span><br><span class="line">      android:id=&quot;@+id/fl_content&quot;</span><br><span class="line">      android:layout_width=&quot;150pt&quot;</span><br><span class="line">      android:layout_height=&quot;150pt&quot;</span><br><span class="line">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/tv_text&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_gravity=&quot;center&quot;</span><br><span class="line">        android:text=&quot;text&quot;</span><br><span class="line">        android:textColor=&quot;@android:color/white&quot;</span><br><span class="line">        android:textSize=&quot;25pt&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">  &lt;/FrameLayout&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure><p>其中，<code>android:focusable=&quot;true&quot;</code>表示可获取控件的焦点（键盘、遥控器），<code>android:focusableInTouchMode=&quot;true&quot;</code>表示可通过触摸获取焦点（AndroidTV不需要，开发时使用模拟器会用到）。</p><blockquote><p>注：</p><ul><li>leanback的垂直和水平列表是继承RecyclerView的自定义控件。</li><li>leanback默认选中项滑动到屏幕中间位置。</li><li>列表的Adapter继承<a href="https://github.com/CymChad/BaseRecyclerViewAdapterHelper" target="_blank" rel="noopener">BaseRecyclerViewAdapterHelper</a>，方便操作与管理。</li><li>垂直列表基本相同，使用的是<code>VerticalGridView</code>类。</li><li>水平列表有一个拓展类<code>HorizontalRowView</code>，以方便处理嵌套。</li></ul></blockquote></li></ol><ol start="2"><li><p>Github上有很多开发者自己仿照leanback自定义的RecyclerViewTV，也是继承的Recyclerview，它们也基本都是水平列表、垂直列表用一个布局，通过属性修改。这里找了一个（具体出处忘记了）来用一下。<br>布局文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;com.example.core.view.RecyclerViewTV</span><br><span class="line">    android:id=&quot;@+id/rvt_item&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_marginTop=&quot;100pt&quot;</span><br><span class="line">    android:orientation=&quot;horizontal&quot;</span><br><span class="line">    android:padding=&quot;20pt&quot;</span><br><span class="line">    app:layoutManagerTV=&quot;V7LinearLayoutManage</span><br><span class="line">    app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p>其中，<code>layoutManagerTV</code>定义布局方式（<code>V7GridLayoutManager</code>、<code>V7LinearLayoutManager</code>、<code>V7StaggeredGridLayoutManager</code>），<code>selectedItemIsCenteredTV</code>设置选中项滑动到屏幕中间，<code>orientation</code>设置水平和垂直（<code>vertical</code>、<code>horizontal</code>）。<code>clipChildren</code>和<code>clipToPadding</code>根据需要添加。</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class="line">//private ListItemAdapter listItemAdapter;</span><br><span class="line">listItemAdapter = new ListItemAdapter();</span><br><span class="line">rvtItem.setAdapter(listItemAdapter);</span><br><span class="line">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 0),</span><br><span class="line">    AutoSizeUtils.pt2px(context, 20));</span><br><span class="line">rvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class="line">  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class="line">    itemView.animate()</span><br><span class="line">        .scaleX(1.05f)</span><br><span class="line">        .scaleY(1.05f)</span><br><span class="line">        .setInterpolator(new BounceInterpolator())</span><br><span class="line">        .setDuration(300)</span><br><span class="line">        .start();</span><br><span class="line">    itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class="line">  &#125;</span><br><span class="line">  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class="line">    itemView.animate()</span><br><span class="line">        .scaleX(1.0f)</span><br><span class="line">        .scaleY(1.0f)</span><br><span class="line">        .setInterpolator(new BounceInterpolator())</span><br><span class="line">        .setDuration(300)</span><br><span class="line">        .start();</span><br><span class="line">    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">listItemAdapter.setNewData(mockData.listItems);</span><br></pre></td></tr></table></figure><p>和leanback实现差不多的功能，adapter也是用的同一个adapter，其中设置间距的方法为<code>setSpacingWithMargins(verticalSpacing,horizontalSpacing)</code>，展示效果和上面leanback的一样。</p><p>RecyclerViewTV的网格布局可以避免部分嵌套。<br>布局文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;com.example.core.view.RecyclerViewTV</span><br><span class="line">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class="line">      android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">      android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">      android:padding=&quot;20pt&quot;</span><br><span class="line">      app:layoutManagerTV=&quot;V7GridLayoutManager&quot;</span><br><span class="line">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class="line">      /&gt;</span><br></pre></td></tr></table></figure><p>将<code>layoutManagerTV</code>设置为上面提到的<code>V7GridLayoutManager</code>即可。<br>效果：<br><img src="/uploads/androidtv/andridtv_rg_list.gif" alt="img"></p></li></ol><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><ol><li><p>leanback嵌套，这里采用先使用垂直列表，再嵌套水平列表。<br>垂直列表布局：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    android:background=&quot;@android:color/black&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;com.example.core.leanback.VerticalGridView</span><br><span class="line">      android:id=&quot;@+id/vgv_item&quot;</span><br><span class="line">      android:layout_width=&quot;match_parent&quot;</span><br><span class="line">      android:layout_height=&quot;match_parent&quot;</span><br><span class="line">      android:clipChildren=&quot;false&quot;</span><br><span class="line">      android:clipToPadding=&quot;false&quot;</span><br><span class="line">      android:padding=&quot;20pt&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure><p>水平列表布局：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:clipChildren=&quot;false&quot;</span><br><span class="line">    android:clipToPadding=&quot;false&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;com.example.core.leanback.HorizontalRowView</span><br><span class="line">      android:id=&quot;@+id/hrv_item&quot;</span><br><span class="line">      android:layout_width=&quot;match_parent&quot;</span><br><span class="line">      android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">      android:clipChildren=&quot;false&quot;</span><br><span class="line">      android:clipToPadding=&quot;false&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//@BindView(R.id.vgv_item) VerticalGridView vgvItem;</span><br><span class="line">//private ItemAdapter itemAdapter;</span><br><span class="line">itemAdapter = new ItemAdapter();</span><br><span class="line">vgvItem.setAdapter(itemAdapter);</span><br><span class="line">vgvItem.setVerticalSpacing(AutoSizeUtils.pt2px(context, 20));</span><br><span class="line">itemAdapter.setNewData(mockData.gnLists);</span><br></pre></td></tr></table></figure><p>垂直列表adapter：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">public class ItemAdapter extends BaseQuickAdapter&lt;GNList, BaseViewHolder&gt; &#123;</span><br><span class="line">  public ItemAdapter() &#123;</span><br><span class="line">    super(R.layout.layout_gn);</span><br><span class="line">  &#125;</span><br><span class="line">  @Override protected void convert(BaseViewHolder helper, GNList item) &#123;</span><br><span class="line">    HorizontalRowView horizontalRowView = helper.getView(R.id.hrv_item);</span><br><span class="line">    ListItemAdapter listItemAdapter = new ListItemAdapter();</span><br><span class="line">    horizontalRowView.getGridView().setAdapter(listItemAdapter);</span><br><span class="line">    horizontalRowView.getGridView().setHorizontalSpacing(AutoSizeUtils.pt2px(context, 20));</span><br><span class="line">    horizontalRowView.getGridView().setOnItemListener(new OnItemListener() &#123;</span><br><span class="line">      @Override public void onItemSelected(Object parent, View itemView, int position) &#123;</span><br><span class="line">        itemView.animate()</span><br><span class="line">            .scaleX(1.05f)</span><br><span class="line">            .scaleY(1.05f)</span><br><span class="line">            .setInterpolator(new BounceInterpolator())</span><br><span class="line">            .setDuration(300)</span><br><span class="line">            .start();</span><br><span class="line">        itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class="line">      &#125;</span><br><span class="line">      @Override public void onItemPreSelected(Object parent, View itemView, int position) &#123;</span><br><span class="line">        itemView.animate()</span><br><span class="line">            .scaleX(1.0f)</span><br><span class="line">            .scaleY(1.0f)</span><br><span class="line">            .setInterpolator(new BounceInterpolator())</span><br><span class="line">            .setDuration(300)</span><br><span class="line">            .start();</span><br><span class="line">        itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    listItemAdapter.setNewData(mockData.listItems);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>GNList</code>类是一个普通的对象，里面只放了一个<code>String</code>列表。水平列表adapter使用上面提到的同一个adapter。<br>效果：<br><img src="/uploads/androidtv/androidtv_gn_list.gif" alt="img"></p></li><li><p>RecyclerViewTV嵌套，也是先使用垂直列表，再嵌套水平列表。<br>垂直列表布局：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    android:background=&quot;@android:color/black&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class="line">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class="line">      android:layout_width=&quot;match_parent&quot;</span><br><span class="line">      android:layout_height=&quot;match_parent&quot;</span><br><span class="line">      android:orientation=&quot;vertical&quot;</span><br><span class="line">      android:padding=&quot;20pt&quot;</span><br><span class="line">      app:layoutManagerTV=&quot;V7LinearLayoutManager&quot;</span><br><span class="line">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure><p>水平列表布局：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:clipChildren=&quot;false&quot;</span><br><span class="line">    android:clipToPadding=&quot;false&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class="line">      android:id=&quot;@+id/rvt_h_item&quot;</span><br><span class="line">      android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">      android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">      android:orientation=&quot;horizontal&quot;</span><br><span class="line">      app:layoutManagerTV=&quot;V7LinearLayoutManager&quot;</span><br><span class="line">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class="line">//private ItemAdapter itemAdapter;</span><br><span class="line">itemAdapter = new ItemAdapter();</span><br><span class="line">rvtItem.setAdapter(itemAdapter);</span><br><span class="line">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class="line">    AutoSizeUtils.pt2px(context, 0));</span><br><span class="line">itemAdapter.setNewData(mockData.rnLists);</span><br></pre></td></tr></table></figure><p>垂直列表adapter：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">public class ItemAdapter extends BaseQuickAdapter&lt;RNList, BaseViewHolder&gt; &#123;</span><br><span class="line">    public ItemAdapter() &#123;</span><br><span class="line">      super(R.layout.layout_rn);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override protected void convert(BaseViewHolder helper, RNList item) &#123;</span><br><span class="line">      RecyclerViewTV rvthItem = helper.getView(R.id.rvt_h_item);</span><br><span class="line">      ListItemAdapter listItemAdapter = new ListItemAdapter();</span><br><span class="line">      rvthItem.setAdapter(listItemAdapter);</span><br><span class="line">      rvthItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 0),</span><br><span class="line">          AutoSizeUtils.pt2px(context, 20));</span><br><span class="line">      rvthItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class="line">        @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class="line">          itemView.animate()</span><br><span class="line">              .scaleX(1.05f)</span><br><span class="line">              .scaleY(1.05f)</span><br><span class="line">              .setInterpolator(new BounceInterpolator())</span><br><span class="line">              .setDuration(300)</span><br><span class="line">              .start();</span><br><span class="line">          itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class="line">          itemView.animate()</span><br><span class="line">              .scaleX(1.0f)</span><br><span class="line">              .scaleY(1.0f)</span><br><span class="line">              .setInterpolator(new BounceInterpolator())</span><br><span class="line">              .setDuration(300)</span><br><span class="line">              .start();</span><br><span class="line">          itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      listItemAdapter.setNewData(mockData.listItems);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><code>RNList</code>类和<code>GNList</code>一样，里面只放了一个<code>String</code>列表。<br>效果和leanback嵌套的效果一样。</p></li></ol><h3 id="同一个列表不相同的item"><a href="#同一个列表不相同的item" class="headerlink" title="同一个列表不相同的item"></a>同一个列表不相同的item</h3><p>  在一个列表中，item展示的内容可能是不一样的，这里使用RecyclerViewTV演示，leanback使用方法差不多。<br>  列表布局：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    android:background=&quot;@android:color/black&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class="line">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class="line">      android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">      android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">      android:layout_gravity=&quot;center_horizontal&quot;</span><br><span class="line">      android:padding=&quot;20pt&quot;</span><br><span class="line">      android:orientation=&quot;vertical&quot;</span><br><span class="line">      app:layoutManagerTV=&quot;V7GridLayoutManager&quot;</span><br><span class="line">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure></p><p>  item1(150pt x 150pt，中间文字)布局：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:focusable=&quot;true&quot;</span><br><span class="line">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class="line">    android:padding=&quot;2pt&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;FrameLayout</span><br><span class="line">      android:id=&quot;@+id/fl_content&quot;</span><br><span class="line">      android:layout_width=&quot;150pt&quot;</span><br><span class="line">      android:layout_height=&quot;150pt&quot;</span><br><span class="line">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/tv_text&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_gravity=&quot;center&quot;</span><br><span class="line">        android:text=&quot;text&quot;</span><br><span class="line">        android:textColor=&quot;@android:color/white&quot;</span><br><span class="line">        android:textSize=&quot;25pt&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">  &lt;/FrameLayout&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p><p>  item2(320pt x 150pt，中间图片和文字)布局：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:focusable=&quot;true&quot;</span><br><span class="line">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class="line">    android:padding=&quot;2pt&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;FrameLayout</span><br><span class="line">      android:id=&quot;@+id/fl_content&quot;</span><br><span class="line">      android:layout_width=&quot;324pt&quot;</span><br><span class="line">      android:layout_height=&quot;150pt&quot;</span><br><span class="line">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:layout_width=&quot;50pt&quot;</span><br><span class="line">        android:layout_height=&quot;50pt&quot;</span><br><span class="line">        android:layout_gravity=&quot;center_vertical&quot;</span><br><span class="line">        android:layout_marginLeft=&quot;30pt&quot;</span><br><span class="line">        android:src=&quot;@mipmap/ic_launcher&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/tv_text&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_gravity=&quot;center_vertical|right&quot;</span><br><span class="line">        android:layout_marginRight=&quot;30pt&quot;</span><br><span class="line">        android:text=&quot;text&quot;</span><br><span class="line">        android:textColor=&quot;@android:color/holo_green_light&quot;</span><br><span class="line">        android:textSize=&quot;25pt&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">  &lt;/FrameLayout&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p><p>  item3(150pt x 150pt，中间图片)布局：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:focusable=&quot;true&quot;</span><br><span class="line">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class="line">    android:padding=&quot;2pt&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;FrameLayout</span><br><span class="line">      android:id=&quot;@+id/fl_content&quot;</span><br><span class="line">      android:layout_width=&quot;150pt&quot;</span><br><span class="line">      android:layout_height=&quot;150pt&quot;</span><br><span class="line">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=&quot;@+id/iv_img&quot;</span><br><span class="line">        android:layout_width=&quot;50pt&quot;</span><br><span class="line">        android:layout_height=&quot;50pt&quot;</span><br><span class="line">        android:layout_gravity=&quot;center&quot;</span><br><span class="line">        android:src=&quot;@drawable/ic_launcher&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">  &lt;/FrameLayout&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p><p>  代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class="line">//private ItemAdapter itemAdapter;</span><br><span class="line">itemAdapter = new ItemAdapter();</span><br><span class="line">itemAdapter.setSpanSizeLookup(new BaseQuickAdapter.SpanSizeLookup() &#123;</span><br><span class="line">  @Override public int getSpanSize(GridLayoutManager gridLayoutManager, int position) &#123;</span><br><span class="line">    return RS_TYPE_LONG == mockData.rsModels.get(position).getItemType() ? 2 : 1;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class="line">    AutoSizeUtils.pt2px(context, 20));</span><br><span class="line">rvtItem.setLayoutManager(new V7GridLayoutManager(context, 3));</span><br><span class="line">rvtItem.setAdapter(itemAdapter);</span><br><span class="line">rvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class="line">  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class="line">    itemView.animate()</span><br><span class="line">        .scaleX(1.05f)</span><br><span class="line">        .scaleY(1.05f)</span><br><span class="line">        .setInterpolator(new BounceInterpolator())</span><br><span class="line">        .setDuration(300)</span><br><span class="line">        .start();</span><br><span class="line">    itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class="line">  &#125;</span><br><span class="line">  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class="line">    itemView.animate()</span><br><span class="line">        .scaleX(1.0f)</span><br><span class="line">        .scaleY(1.0f)</span><br><span class="line">        .setInterpolator(new BounceInterpolator())</span><br><span class="line">        .setDuration(300)</span><br><span class="line">        .start();</span><br><span class="line">    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">itemAdapter.setNewData(mockData.rsModels);</span><br><span class="line">itemAdapter.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() &#123;</span><br><span class="line">  @Override public void onItemClick(BaseQuickAdapter adapter, View view, int position) &#123;</span><br><span class="line">    toastor.showToast(&quot;click&quot; + position);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>  注：<strong><code>RecyclerViewTV</code>的<code>setAdapter</code>方法要放在<code>setLayoutManager</code>方法后面，否则<code>Adapter</code>的<code>setSpanSizeLookup</code>方法不会执行。</strong><br>  效果：<br>  <img src="/uploads/androidtv/androidtv_rs_list.gif" alt="img"></p><h3 id="暗焦点"><a href="#暗焦点" class="headerlink" title="暗焦点"></a>暗焦点</h3><p>暗焦点也是一个经常需要用到的功能，比如下面就是一个左边菜单右边内容的布局，需要暗焦点提示使用者菜单的当前选中项。先放效果图：<br><img src="/uploads/androidtv/androidtv_o.gif" alt="img"><br>外框架activity布局：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    android:background=&quot;@android:color/black&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class="line">      android:id=&quot;@+id/rvt_menu&quot;</span><br><span class="line">      android:layout_width=&quot;200pt&quot;</span><br><span class="line">      android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">      android:layout_centerVertical=&quot;true&quot;</span><br><span class="line">      android:orientation=&quot;vertical&quot;</span><br><span class="line">      app:layoutManagerTV=&quot;V7LinearLayoutManager&quot;</span><br><span class="line">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">  &lt;com.example.core.view.VerticalViewPager</span><br><span class="line">      android:id=&quot;@+id/vvp_content&quot;</span><br><span class="line">      android:layout_width=&quot;match_parent&quot;</span><br><span class="line">      android:layout_height=&quot;match_parent&quot;</span><br><span class="line">      android:layout_toRightOf=&quot;@id/rvt_menu&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p><p>fragment布局：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class="line">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class="line">      android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">      android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">      android:padding=&quot;20pt&quot;</span><br><span class="line">      app:layoutManagerTV=&quot;V7GridLayoutManager&quot;</span><br><span class="line">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p><p>外框架activity主要代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">//@BindView(R.id.rvt_menu) RecyclerViewTV rvtMenu;</span><br><span class="line">//@BindView(R.id.vvp_content) VerticalViewPager vvpContent;</span><br><span class="line">//@BindColor(android.R.color.transparent) int transparent;</span><br><span class="line">//@BindColor(R.color.colorPrimary) int darkerGray;</span><br><span class="line">//@BindColor(android.R.color.tertiary_text_light) int textLight;</span><br><span class="line">//private MenuAdapter menuAdapter;</span><br><span class="line">//private boolean isRight = false;</span><br><span class="line">//private ViewPagerAdapter pagerAdapter;</span><br><span class="line">menuAdapter = new MenuAdapter();</span><br><span class="line">rvtMenu.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class="line">    AutoSizeUtils.pt2px(context, 0));</span><br><span class="line">rvtMenu.setAdapter(menuAdapter);</span><br><span class="line">rvtMenu.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class="line">  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class="line">    if (position != vvpContent.getCurrentItem()) &#123;</span><br><span class="line">      vvpContent.setCurrentItem(position);</span><br><span class="line">    &#125;</span><br><span class="line">    itemView.setBackgroundColor(darkerGray);</span><br><span class="line">  &#125;</span><br><span class="line">  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class="line">    itemView.setBackgroundColor(isRight ? textLight : transparent);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">rvtMenu.setOnChildViewHolderSelectedListener(</span><br><span class="line">    new RecyclerViewTV.OnChildViewHolderSelectedListener() &#123;</span><br><span class="line">      @Override</span><br><span class="line">      public void onChildViewHolderSelected(RecyclerViewTV parent, RecyclerView.ViewHolder vh,</span><br><span class="line">          int position) &#123;</span><br><span class="line">        vh.itemView.setOnKeyListener(new View.OnKeyListener() &#123;</span><br><span class="line">          @Override public boolean onKey(View view, int i, KeyEvent keyEvent) &#123;</span><br><span class="line">            if (keyEvent.getAction() == KeyEvent.ACTION_DOWN) &#123;</span><br><span class="line">              isRight = i == KeyEvent.KEYCODE_DPAD_RIGHT;</span><br><span class="line">            &#125;</span><br><span class="line">            return false;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">menuAdapter.setNewData(mockData.outMenu);</span><br><span class="line">for (int i = 0; i &lt; mockData.outMenu.size(); i++) &#123;</span><br><span class="line">  BaseFragment fragment = new ConentFragment();</span><br><span class="line">  Bundle bundle = new Bundle();</span><br><span class="line">  bundle.putInt(&quot;menuIndex&quot;, i);</span><br><span class="line">  fragment.setArguments(bundle);</span><br><span class="line">  fragments.add(fragment);</span><br><span class="line">&#125;</span><br><span class="line">pagerAdapter = new ViewPagerAdapter(fragmentManager, fragments);</span><br><span class="line">vvpContent.setAdapter(pagerAdapter);</span><br><span class="line">setViewPagerSpeed(vvpContent, 300);//设置viewpager切换的速度</span><br></pre></td></tr></table></figure></p><p>  <code>MenuAdapter</code>上面例子已经有很多不再重复放了。这里是通过一个布尔值<code>isRight</code>和<code>setOnChildViewHolderSelectedListener</code>方法记录操作状态实现暗焦点的，<code>setOnChildViewHolderSelectedListener</code>是一个列表子项的监听事件。还可以通过<code>View</code>的<code>activated</code>值来记录暗焦点，比如列表选中的最后一项的子视图设置为<code>activated</code>,在子视图监听事件<code>setOnItemListener</code>中通过<code>itemView.isActivated()</code>判断是否为暗焦点。本项目使用的RecyclerViewTV专门针对暗焦点做了处理就是通过<code>activated</code>实现的，通过<code>isMenu(true)</code>打开即可进行暗焦点的设置和判断操作。</p><p>外框架activity需要注意的方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@Override public void onAttachedToWindow() &#123;</span><br><span class="line">  super.onAttachedToWindow();</span><br><span class="line">  rvtMenu.setSelection(0);</span><br><span class="line">&#125;</span><br><span class="line">protected void setViewPagerSpeed(VerticalViewPager viewPager, int mDuration) &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    Field field = VerticalViewPager.class.getDeclaredField(&quot;mScroller&quot;);</span><br><span class="line">    field.setAccessible(true);</span><br><span class="line">    FixedSpeedScroller scroller =</span><br><span class="line">        new FixedSpeedScroller(viewPager.getContext(), new AccelerateInterpolator());</span><br><span class="line">    field.set(viewPager, scroller);</span><br><span class="line">    scroller.setmDuration(mDuration);</span><br><span class="line">  &#125; catch (Exception e) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  因为fragment里面的数据可能会后渲染，在刚进入这个界面的时候焦点会在fragment上面，所以需要再<code>onAttachedToWindow</code>方法中让焦点进入界面渲染完成后回到菜单上，这里不用<code>requestFocus()</code>而使用<code>setSelection()</code>是因为<code>setSelection()</code>里面已经包含了<code>requestFocus()</code>方法并且它能选择列表具体哪一个子项获得焦点。<br>  <code>setViewPagerSpeed</code>是一个设置viewpager页面切换速度的方法。</p><p>fragment代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class="line">//private ListItemAdapter listItemAdapter;</span><br><span class="line">Bundle bundle = getArguments();</span><br><span class="line">    if (bundle != null) &#123;</span><br><span class="line">      int menuIndex = bundle.getInt(&quot;menuIndex&quot;);//获取activity传过来的数据</span><br><span class="line">    &#125;</span><br><span class="line">    listItemAdapter = new ListItemAdapter();</span><br><span class="line">    rvtItem.setAdapter(listItemAdapter);</span><br><span class="line">    rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(mContext, 20),</span><br><span class="line">        AutoSizeUtils.pt2px(mContext, 20));</span><br><span class="line">    rvtItem.setLayoutManager(new V7GridLayoutManager(mContext, 4));</span><br><span class="line">    rvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class="line">      @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class="line">        itemView.animate()</span><br><span class="line">            .scaleX(1.05f)</span><br><span class="line">            .scaleY(1.05f)</span><br><span class="line">            .setInterpolator(new BounceInterpolator())</span><br><span class="line">            .setDuration(300)</span><br><span class="line">            .start();</span><br><span class="line">        itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class="line">        itemView.animate()</span><br><span class="line">            .scaleX(1.0f)</span><br><span class="line">            .scaleY(1.0f)</span><br><span class="line">            .setInterpolator(new BounceInterpolator())</span><br><span class="line">            .setDuration(300)</span><br><span class="line">            .start();</span><br><span class="line">        itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></p><p>  fragment没什么需要注意的东西，和之前的<code>RecyclerViewTV</code>网格列表一样的代码。</p><h3 id="遥控器按键"><a href="#遥控器按键" class="headerlink" title="遥控器按键"></a>遥控器按键</h3><p>遥控器按键主要有方向键(上、下、左、右)、确定、返回、播放（暂停）、数字等。<br>activity中可以通过<code>onKeyDown</code>和<code>dispatchKeyEvent</code>方法进行监听操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@Override public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</span><br><span class="line">  //TODO operating</span><br><span class="line">  return super.onKeyDown(keyCode, event);</span><br><span class="line">&#125;</span><br><span class="line">@Override public boolean dispatchKeyEvent(KeyEvent event) &#123;</span><br><span class="line">  //TODO operating</span><br><span class="line">  return super.dispatchKeyEvent(event);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>返回事件也可以通过<code>onBackPressed</code>方法监听操作。</p><p>view可以通过<code>setOnKeyListener</code>方法进行监听操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">view.setOnKeyListener(new View.OnKeyListener() &#123;</span><br><span class="line">  @Override public boolean onKey(View view, int keyCode, KeyEvent keyEvent) &#123;</span><br><span class="line">    //TODO operating</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>按键监听的返回值为true时，则表示不执行按键操作，可自定义操作。</p><table><thead><tr><th style="text-align:left">键值</th><th style="text-align:center">事件</th></tr></thead><tbody><tr><td style="text-align:left">KeyEvent.KEYCODE_DPAD_UP</td><td style="text-align:center">上</td></tr><tr><td style="text-align:left">KeyEvent.KEYCODE_DPAD_DOWN</td><td style="text-align:center">下</td></tr><tr><td style="text-align:left">KeyEvent.KEYCODE_DPAD_LEFT</td><td style="text-align:center">左</td></tr><tr><td style="text-align:left">KeyEvent.KEYCODE_DPAD_RIGHT</td><td style="text-align:center">右</td></tr><tr><td style="text-align:left">KeyEvent.KEYCODE_DPAD_CENTER</td><td style="text-align:center">确定</td></tr><tr><td style="text-align:left">KeyEvent.KEYCODE_MEDIA_PAUSE</td><td style="text-align:center">视频播放、暂停</td></tr><tr><td style="text-align:left">KeyEvent.KEYCODE_1</td><td style="text-align:center">0~9，10个数字</td></tr><tr><td style="text-align:left">KeyEvent.KEYCODE_BACK</td><td style="text-align:center">返回键</td></tr><tr><td style="text-align:left">KeyEvent.KEYCODE_HOME</td><td style="text-align:center">主页</td></tr><tr><td style="text-align:left">KeyEvent.KEYCODE_A</td><td style="text-align:center">A~Z，26个字母</td></tr><tr><td style="text-align:left">KeyEvent.KEYCODE_MENU</td><td style="text-align:center">菜单</td></tr><tr><td style="text-align:left">…</td><td style="text-align:center">…</td></tr></tbody></table><hr><p>  附：<a href="https://github.com/blackchy/AndroidTV" target="_blank" rel="noopener">项目地址</a></p>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AndroidTV </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>RxBus的使用</title>
      <link href="/2018/12/11/2018-12-11-RxBus/"/>
      <url>/2018/12/11/2018-12-11-RxBus/</url>
      
        <content type="html"><![CDATA[<p>EventBus是一款针对Android优化的发布-订阅事件总线，它简化了应用程序内各组件间、组件与后台线程间的通信，优点是更加简洁、更优雅、开销更小，且将发送者和接收者解耦。而RxBus是使用RxJava实现事件总线的一中思想，比EventBus更方便。简单来说RxBus的作用就是方便组件之间的交互，当然，项目中能避免使用RxBus和EventBus就尽量不用。<br><a id="more"></a></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><a href="https://github.com/JakeWharton/RxBinding" target="_blank" rel="noopener">RxBinding</a>是<a href="https://github.com/JakeWharton" target="_blank" rel="noopener">JakeWharton</a>的一个库，可以响应式的方式处理UI的响应问题，当中已经依赖了RxJava等库，不需要重复依赖。也可以不用RxBingding而直接依赖RxJava的相关库。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile &apos;com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha1&apos;</span><br></pre></td></tr></table></figure></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>RxBus类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">private Subject&lt;Object&gt; bus = PublishSubject.create().toSerialized();</span><br><span class="line"></span><br><span class="line">public void post(Object o) &#123;</span><br><span class="line">  bus.onNext(o);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public &lt;T&gt; Observable&lt;T&gt; toObservable(Class&lt;T&gt; event) &#123;</span><br><span class="line">  return bus.ofType(event).onErrorReturn(new Function&lt;Throwable, T&gt;() &#123;</span><br><span class="line">    @Override public T apply(@NonNull Throwable throwable) throws Exception &#123;</span><br><span class="line">      return null;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).filter(new Predicate&lt;T&gt;() &#123;</span><br><span class="line">    @Override public boolean test(@NonNull T t) throws Exception &#123;</span><br><span class="line">      return t != null;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).observeOn(AndroidSchedulers.mainThread());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>BaseFragment类,统一处理所有订阅：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">private CompositeDisposable mCompositeDisposable;</span><br><span class="line"></span><br><span class="line">//create方法中：</span><br><span class="line">mCompositeDisposable = new CompositeDisposable();</span><br><span class="line"></span><br><span class="line">protected void addDisposable(Disposable mDisposable) &#123;</span><br><span class="line">  if (mCompositeDisposable == null) &#123;</span><br><span class="line">    mCompositeDisposable = new CompositeDisposable();</span><br><span class="line">  &#125;</span><br><span class="line">  mCompositeDisposable.add(mDisposable);</span><br><span class="line">&#125;</span><br><span class="line">private void clearDisposable() &#123;</span><br><span class="line">  if (mCompositeDisposable != null) &#123;</span><br><span class="line">    mCompositeDisposable.clear();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//destroy方法中：</span><br><span class="line">clearDisposable();</span><br></pre></td></tr></table></figure></p><p>发送者Fragment：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">btnSend.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">    @Override public void onClick(View view) &#123;</span><br><span class="line">      RxBus.getInstance().post(new MessageEvent(DateUtil.getCurrentTime(), &quot;商城界面的事件&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure></p><p>接收者Fragment<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//写在初始化方法中，随时准备接收事件</span><br><span class="line">addDisposable(RxBus.getInstance()</span><br><span class="line">        .toObservable(MessageEvent.class)</span><br><span class="line">        .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">        .subscribe(new Consumer&lt;MessageEvent&gt;() &#123;</span><br><span class="line">          @Override public void accept(MessageEvent messageEvent) throws Exception &#123;</span><br><span class="line">            tvHomeAccept.setText(messageEvent.getTime() + &quot;\n接收到 &quot; + messageEvent.getMessage());</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;));</span><br></pre></td></tr></table></figure></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><ul><li>效果<br><img src="/uploads/rxbus/rxbus.gif" width="300"></li><li><a href="https://github.com/blackchy/RxBusExample" target="_blank" rel="noopener">项目地址</a></li></ul><hr><p><b>完</b></p>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>fmod变声方法简单调用</title>
      <link href="/2018/12/10/2018-12-10-Fmod-Voice-Change/"/>
      <url>/2018/12/10/2018-12-10-Fmod-Voice-Change/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.fmod.com/" target="_blank" rel="noopener">fmod</a>是一个强大的声音引擎框架，QQ、魔兽世界及其他很多游戏都是使用的这套框架，框架内包含几十种声音类型，还可以修改声音的频率、速度等等。下面来简单调用一下<a href="https://www.fmod.com/" target="_blank" rel="noopener">fmod</a>的变声方法。<br><a id="more"></a></p><h3 id="下载-fmod-API"><a href="#下载-fmod-API" class="headerlink" title="下载 fmod API"></a>下载 fmod API</h3><p>进入<a href="https://www.fmod.com/download" target="_blank" rel="noopener">fmod download</a>下载Android API。</p><p><img src="/uploads/fmod-voice-change/fmod-download.png" alt="img"></p><h3 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h3><p>勾选include c/c++ support。</p><p><img src="/uploads/fmod-voice-change/new-project.png" alt="img"></p><p>勾选异常检测和安全转换</p><p><img src="/uploads/fmod-voice-change/new-project2.png" alt="img"></p><h3 id="加入API"><a href="#加入API" class="headerlink" title="加入API"></a>加入API</h3><p>打开下载之后解压的fmod API目录，到<code>api/lowlevel</code>文件夹，把<code>inc</code>文件夹及里面的文件全部复制到项目的<code>app/src/main/cpp</code>文件夹中,把<code>lib</code>文件夹中的所有文件夹和文件复制到项目的<code>app/libs</code>文件夹中，jar包要右键<code>add as library</code>。</p><p><img src="/uploads/fmod-voice-change/add-api.png" alt="img"></p><h3 id="配置app-build-gradle"><a href="#配置app-build-gradle" class="headerlink" title="配置app/build.gradle"></a>配置app/build.gradle</h3><p>android/defaultConfig里新增：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ndk &#123;</span><br><span class="line">  abiFilters &quot;armeabi&quot;,&quot;arm64-v8a&quot;,&quot;armeabi-v7a&quot;,&quot;x86&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>android里新增：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sourceSets.main &#123;</span><br><span class="line">  jniLibs.srcDirs = [&apos;libs&apos;]</span><br><span class="line">  jni.srcDirs = []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/uploads/fmod-voice-change/modify-gradle.png" alt="img"></p><h3 id="配置app-CMakeLists-txt"><a href="#配置app-CMakeLists-txt" class="headerlink" title="配置app/CMakeLists.txt"></a>配置app/CMakeLists.txt</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.4.1)</span><br><span class="line"></span><br><span class="line">#-----------------------------------------</span><br><span class="line">find_library( log-lib</span><br><span class="line">              log )</span><br><span class="line"></span><br><span class="line">set(my_lib_path $&#123;CMAKE_SOURCE_DIR&#125;/libs)</span><br><span class="line"></span><br><span class="line"># 添加三方的so库</span><br><span class="line">add_library(libfmod</span><br><span class="line">            SHARED</span><br><span class="line">            IMPORTED )</span><br><span class="line"></span><br><span class="line"> # 指名第三方库的绝对路径</span><br><span class="line"> set_target_properties( libfmod</span><br><span class="line">                        PROPERTIES IMPORTED_LOCATION</span><br><span class="line">                        $&#123;my_lib_path&#125;/$&#123;ANDROID_ABI&#125;/libfmod.so )</span><br><span class="line"></span><br><span class="line"> add_library(libfmodL</span><br><span class="line">             SHARED</span><br><span class="line">             IMPORTED )</span><br><span class="line"></span><br><span class="line"> set_target_properties( libfmodL</span><br><span class="line">                        PROPERTIES IMPORTED_LOCATION</span><br><span class="line">                        $&#123;my_lib_path&#125;/$&#123;ANDROID_ABI&#125;/libfmodL.so )</span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -std=gnu++11&quot;)</span><br><span class="line"></span><br><span class="line">#--------------------------------</span><br><span class="line">add_library( # Sets the name of the library.</span><br><span class="line">             changeVoice</span><br><span class="line"></span><br><span class="line">             # Sets the library as a shared library.</span><br><span class="line">             SHARED</span><br><span class="line"></span><br><span class="line">             # Provides a relative path to your source file(s).</span><br><span class="line">             src/main/cpp/native-lib.cpp )</span><br><span class="line"></span><br><span class="line">#---------------------</span><br><span class="line"># 导入路径，为了让编译时能够寻找到这个文件夹</span><br><span class="line">include_directories(src/main/cpp/inc)</span><br><span class="line"></span><br><span class="line"># 链接好三个路径</span><br><span class="line">target_link_libraries( changeVoice</span><br><span class="line">                       libfmod</span><br><span class="line">                       libfmodL</span><br><span class="line"></span><br><span class="line">                       $&#123;log-lib&#125; )</span><br></pre></td></tr></table></figure><h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><p>布局文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    android:background=&quot;#FFF&quot;</span><br><span class="line">    android:gravity=&quot;center_horizontal&quot;</span><br><span class="line">    android:orientation=&quot;vertical&quot;</span><br><span class="line">    android:padding=&quot;10pt&quot;</span><br><span class="line">    &gt;</span><br><span class="line"></span><br><span class="line">  &lt;LinearLayout</span><br><span class="line">      android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">      android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">      android:orientation=&quot;horizontal&quot;</span><br><span class="line">      &gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/btn_1&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;原声&quot;</span><br><span class="line">        /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/btn_2&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;萝莉&quot;</span><br><span class="line">        /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/btn_3&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;大叔&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">  &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">  &lt;LinearLayout</span><br><span class="line">      android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">      android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">      android:orientation=&quot;horizontal&quot;</span><br><span class="line">      &gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/btn_4&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;惊悚&quot;</span><br><span class="line">        /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/btn_5&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;搞怪&quot;</span><br><span class="line">        /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/btn_6&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;空灵&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">  &lt;/LinearLayout&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p><p>java代码，新建Util类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public class Util &#123;</span><br><span class="line"></span><br><span class="line">  //音效的类型</span><br><span class="line">  public static final int MODE_NORMAL = 0;//正常</span><br><span class="line">  public static final int MODE_LUOLI = 1;//萝莉</span><br><span class="line">  public static final int MODE_DASHU = 2;//大叔</span><br><span class="line">  public static final int MODE_JINGSONG = 3;//惊悚</span><br><span class="line">  public static final int MODE_GAOGUAI = 4;//搞怪</span><br><span class="line">  public static final int MODE_KONGLING = 5;//空灵</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 变声</span><br><span class="line">   *</span><br><span class="line">   * @param path 声音路径</span><br><span class="line">   * @param type 变声类型</span><br><span class="line">   */</span><br><span class="line">  public static native void voiceChange(String path, int type);</span><br><span class="line"></span><br><span class="line">  static &#123;</span><br><span class="line">    System.loadLibrary(&quot;fmodL&quot;);</span><br><span class="line">    System.loadLibrary(&quot;fmod&quot;);</span><br><span class="line">    System.loadLibrary(&quot;changeVoice&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>java代码，MainActivity类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">  @Override protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    super.onCreate(savedInstanceState);</span><br><span class="line">    FMOD.init(this);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    findViewById(R.id.btn_1).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">      @Override public void onClick(View v) &#123;</span><br><span class="line">        VoiceFun1(v);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    findViewById(R.id.btn_2).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">      @Override public void onClick(View v) &#123;</span><br><span class="line">        VoiceFun2(v);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    findViewById(R.id.btn_3).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">      @Override public void onClick(View v) &#123;</span><br><span class="line">        VoiceFun3(v);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    findViewById(R.id.btn_4).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">      @Override public void onClick(View v) &#123;</span><br><span class="line">        VoiceFun4(v);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    findViewById(R.id.btn_5).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">      @Override public void onClick(View v) &#123;</span><br><span class="line">        VoiceFun5(v);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    findViewById(R.id.btn_6).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">      @Override public void onClick(View v) &#123;</span><br><span class="line">        VoiceFun6(v);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void VoiceFun1(View btn) &#123;</span><br><span class="line">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class="line">        + File.separatorChar</span><br><span class="line">        + &quot;/Download/10028.wav&quot;;</span><br><span class="line">    File file = new File(path);</span><br><span class="line">    if (file.exists()) &#123;</span><br><span class="line">      Toast.makeText(this, &quot;变声-正常&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">      Util.voiceChange(path, Util.MODE_NORMAL);</span><br><span class="line">      Log.e(&quot;x---&quot;, &quot;VoiceFun1&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class="line">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void VoiceFun2(View btn) &#123;</span><br><span class="line">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class="line">        + File.separatorChar</span><br><span class="line">        + &quot;/Download/10028.wav&quot;;</span><br><span class="line">    File file = new File(path);</span><br><span class="line">    if (file.exists()) &#123;</span><br><span class="line">      Toast.makeText(this, &quot;变声-萝莉&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">      Util.voiceChange(path, Util.MODE_LUOLI);</span><br><span class="line">      Log.d(&quot;jason&quot;, &quot;VoiceFun2&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class="line">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void VoiceFun3(View btn) &#123;</span><br><span class="line">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class="line">        + File.separatorChar</span><br><span class="line">        + &quot;/Download/10028.wav&quot;;</span><br><span class="line">    File file = new File(path);</span><br><span class="line">    if (file.exists()) &#123;</span><br><span class="line">      Toast.makeText(this, &quot;变声-大叔&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">      Util.voiceChange(path, Util.MODE_DASHU);</span><br><span class="line">      Log.e(&quot;x---&quot;, &quot;VoiceFun3&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class="line">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void VoiceFun4(View btn) &#123;</span><br><span class="line">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class="line">        + File.separatorChar</span><br><span class="line">        + &quot;/Download/10028.wav&quot;;</span><br><span class="line">    File file = new File(path);</span><br><span class="line">    if (file.exists()) &#123;</span><br><span class="line">      Toast.makeText(this, &quot;变声-惊悚&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">      Util.voiceChange(path, Util.MODE_JINGSONG);</span><br><span class="line">      Log.e(&quot;x---&quot;, &quot;VoiceFun4&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class="line">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void VoiceFun5(View btn) &#123;</span><br><span class="line">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class="line">        + File.separatorChar</span><br><span class="line">        + &quot;/Download/10028.wav&quot;;</span><br><span class="line">    File file = new File(path);</span><br><span class="line">    if (file.exists()) &#123;</span><br><span class="line">      Toast.makeText(this, &quot;变声-搞笑&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">      Util.voiceChange(path, Util.MODE_GAOGUAI);</span><br><span class="line">      Log.e(&quot;x---&quot;, &quot;VoiceFun5&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class="line">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void VoiceFun6(View btn) &#123;</span><br><span class="line">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class="line">        + File.separatorChar</span><br><span class="line">        + &quot;/Download/10028.wav&quot;;</span><br><span class="line">    File file = new File(path);</span><br><span class="line">    if (file.exists()) &#123;</span><br><span class="line">      Toast.makeText(this, &quot;变声-空灵&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">      Util.voiceChange(path, Util.MODE_KONGLING);</span><br><span class="line">      Log.e(&quot;x---&quot;, &quot;VoiceFun6&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class="line">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override protected void onDestroy() &#123;</span><br><span class="line">    super.onDestroy();</span><br><span class="line">    FMOD.close();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override public void onBackPressed() &#123;</span><br><span class="line">    super.onBackPressed();</span><br><span class="line">    finish();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>C++代码，app/src/main/cpp/native-lib.cpp:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;jni.h&gt;</span><br><span class="line">#include &quot;inc/fmod.hpp&quot;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line"></span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace FMOD;</span><br><span class="line"></span><br><span class="line">#define MODE_NORMAL 0</span><br><span class="line">#define MODE_LUOLI 1</span><br><span class="line">#define MODE_DASHU 2</span><br><span class="line">#define MODE_JINGSONG 3</span><br><span class="line">#define MODE_GAOGUAI 4</span><br><span class="line">#define MODE_KONGLING 5</span><br><span class="line"></span><br><span class="line">#include &lt;android/log.h&gt;</span><br><span class="line"></span><br><span class="line">#define LOGI(FORMAT, ...) __android_log_print(ANDROID_LOG_INFO,&quot;voiceChange&quot;,FORMAT,##__VA_ARGS__);</span><br><span class="line">#define LOGE(FORMAT, ...) __android_log_print(ANDROID_LOG_ERROR,&quot;voiceChange&quot;,FORMAT,##__VA_ARGS__);</span><br><span class="line"></span><br><span class="line">extern &quot;C&quot;</span><br><span class="line">JNIEXPORT void JNICALL</span><br><span class="line">Java_com_exp_fmodvoicechange_Util_voiceChange(JNIEnv *env, jclass cls, jstring path_str, jint type) &#123;</span><br><span class="line">    System * system;</span><br><span class="line">    Sound * sound;</span><br><span class="line">    Channel  *channel;</span><br><span class="line">    DSP *dsp;</span><br><span class="line">    bool playing= true;</span><br><span class="line">    float frequency=1;</span><br><span class="line"></span><br><span class="line">    //初始化</span><br><span class="line">    System_Create(&amp;system);</span><br><span class="line">    system-&gt;init(32, FMOD_INIT_NORMAL, NULL);</span><br><span class="line"></span><br><span class="line">    //将string转成char*</span><br><span class="line">    const char* path=env-&gt;GetStringUTFChars(path_str,NULL);</span><br><span class="line"></span><br><span class="line">    //创建声音</span><br><span class="line">    system-&gt;createSound(path,FMOD_DEFAULT, 0, &amp;sound);</span><br><span class="line">    try &#123;</span><br><span class="line">        //根据类型改变声音</span><br><span class="line">        switch (type) &#123;</span><br><span class="line">            case MODE_NORMAL:</span><br><span class="line">                //正常声音</span><br><span class="line">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class="line">                break;</span><br><span class="line">            case MODE_LUOLI:</span><br><span class="line">                //萝莉</span><br><span class="line">                //DSP digital signal process</span><br><span class="line">                //dsp -&gt; 音效 创建fmod中预定义好的音效</span><br><span class="line">                //FMOD_DSP_TYPE_PITCHSHIFT dsp，提升或者降低音调用的一种音效</span><br><span class="line">                system-&gt;createDSPByType(FMOD_DSP_TYPE_PITCHSHIFT, &amp;dsp);</span><br><span class="line">                //提高音效</span><br><span class="line">                dsp-&gt;setParameterFloat(FMOD_DSP_TYPE_PITCHSHIFT, 2.5);</span><br><span class="line">                //播放声音</span><br><span class="line">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class="line">                //将channel添加到dsp</span><br><span class="line">                channel-&gt;addDSP(0, dsp);</span><br><span class="line">                break;</span><br><span class="line">            case MODE_DASHU:</span><br><span class="line">                //大叔</span><br><span class="line">                system-&gt;createDSPByType(FMOD_DSP_TYPE_PITCHSHIFT, &amp;dsp);</span><br><span class="line">                //降低声音</span><br><span class="line">                dsp-&gt;setParameterFloat(FMOD_DSP_PITCHSHIFT_PITCH, 0.8);</span><br><span class="line">                //播放声音</span><br><span class="line">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class="line">                //将channel添加到dsp</span><br><span class="line">                channel-&gt;addDSP(0, dsp);</span><br><span class="line">                break;</span><br><span class="line">            case MODE_JINGSONG:</span><br><span class="line">                //惊悚</span><br><span class="line">                system-&gt;createDSPByType(FMOD_DSP_TYPE_TREMOLO, &amp;dsp);</span><br><span class="line">                dsp-&gt;setParameterFloat(FMOD_DSP_TREMOLO_SKEW, 0.5);</span><br><span class="line">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class="line">                channel-&gt;addDSP(0, dsp);</span><br><span class="line">                break;</span><br><span class="line">            case MODE_GAOGUAI:</span><br><span class="line">                //搞怪</span><br><span class="line">                //提高说话的速度</span><br><span class="line">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class="line">                //frequency  原来的声音速度</span><br><span class="line">                channel-&gt;getFrequency(&amp;frequency);</span><br><span class="line">                frequency = frequency * 1.6;</span><br><span class="line">                channel-&gt;setFrequency(frequency);</span><br><span class="line">                break;</span><br><span class="line">            case MODE_KONGLING:</span><br><span class="line">                //空灵</span><br><span class="line">                system-&gt;createDSPByType(FMOD_DSP_TYPE_ECHO, &amp;dsp);</span><br><span class="line">                dsp-&gt;setParameterFloat(FMOD_DSP_ECHO_DELAY, 300);</span><br><span class="line">                dsp-&gt;setParameterFloat(FMOD_DSP_ECHO_FEEDBACK, 20);</span><br><span class="line">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class="line">                channel-&gt;addDSP(0, dsp);</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    catch (...)&#123;</span><br><span class="line">        //捕捉异常</span><br><span class="line">        LOGE(&quot;%s&quot;,&quot;发生异常&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    system-&gt;update();</span><br><span class="line">    //释放资源</span><br><span class="line">    //单位是微秒</span><br><span class="line">    //每秒钟判断下是否在播放</span><br><span class="line">    while(playing)&#123;</span><br><span class="line">        channel-&gt;isPlaying(&amp;playing);</span><br><span class="line">        usleep(1000 * 1000);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //释放</span><br><span class="line">    sound-&gt;release();</span><br><span class="line">    system-&gt;close();</span><br><span class="line">    system-&gt;release();</span><br><span class="line">    env-&gt;ReleaseStringUTFChars(path_str,path);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><ul><li>界面：<br><img src="/uploads/fmod-voice-change/page.png" alt="img"></li><li>项目配置：<ol><li>Android Studio 2.3.3</li><li>gradle 2.3.3</li><li>sdk version 26</li><li><a href="https://www.fmod.com/download" target="_blank" rel="noopener">fmod API version 1.10.10</a></li><li><a href="https://developer.android.google.cn/ndk/downloads/older_releases" target="_blank" rel="noopener">ndk version 14</a></li></ol></li><li><p>权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- xmlns:tools=&quot;http://schemas.android.com/tools&quot; --&gt;</span><br><span class="line">&lt;!--读写sd卡权限--&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt;</span><br><span class="line">&lt;uses-permission</span><br><span class="line">      android:name=&quot;android.permission.MOUNT_UNMOUNT_FILESYSTEMS&quot;</span><br><span class="line">      tools:ignore=&quot;ProtectedPermissions&quot; /&gt;</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/blackchy/FmodVoiceChange" target="_blank" rel="noopener">项目地址</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> audio </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博客-Jekyll迁移到Hexo</title>
      <link href="/2018/12/04/2018-12-04-Jekyll-To-Hexo/"/>
      <url>/2018/12/04/2018-12-04-Jekyll-To-Hexo/</url>
      
        <content type="html"><![CDATA[<p>发现了比<a href="https://jekyllrb.com/" target="_blank" rel="noopener">Jekyll</a>用起来更舒服的<a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">Hexo</a>，它是一个快速、简洁且高效的博客框架，其中使用Markdown（或其他渲染引擎）解析文章，最后生成静态网页。研究了一下<a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">Hexo</a>的<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">文档</a>过后马上就把它应用到了博客中。<br><a id="more"></a></p><p>详细流程(Windows环境)如下，具体可参考<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo文档</a>。</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol><li><p>安装Git、安装Node.js</p><ul><li><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a></li><li><a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js</a></li></ul></li><li><p>安装Hexo </p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blackchy.github.io</span><br><span class="line">$ cd blackchy.github.io</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>打开根目录下的<code>_config.yml</code>文件，主要配置以下内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Black Chy&apos;s Blog</span><br><span class="line">subtitle: 香蕉是最受欢迎的水果。</span><br><span class="line">description: Just a dog.</span><br><span class="line">keywords: Android, Developer, Dog</span><br><span class="line">author: Black Chy</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: Asia/Chongqing</span><br></pre></td></tr></table></figure></p><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>项目默认是landscape主题，这里修改为<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a>。<br>首先下载next主题到项目中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>然后把根目录下<code>_config.yml</code>文件中的<code>theme</code>改为<code>next</code>。next主题需要手动生成<code>tags</code>和<code>categories</code>，并修改index文件中的内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 所有标签</span><br><span class="line">type: tags</span><br><span class="line">date: 2018-12-04 00:00:00</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 所有分类</span><br><span class="line">type: categories</span><br><span class="line">date: 2018-12-04 00:00:00</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>最后，在下载好的next主题中也有一个<code>_config.yml</code>文件（路径：<code>theme-&gt;next-&gt;_config.yml</code>），打开进行next主题相关配置。例如：</p><ol><li><p>next内部又有4个不同的设计风格，这里使用的是Gemini</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure></li><li><p>设置头像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  #头像url</span><br><span class="line">  url: /uploads/avatar.png</span><br><span class="line">  #圆头像</span><br><span class="line">  rounded: true</span><br><span class="line">  #透明度 0-1</span><br><span class="line">  opacity: 1</span><br><span class="line">  #旋转动画</span><br><span class="line">  rotated: true</span><br></pre></td></tr></table></figure></li><li><p>设置菜单列表，仅打开 首页、关于、归档，其他全部关闭。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  #tags: /tags/ || tags</span><br><span class="line">  #categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure></li><li><p>打开不蒜子网页计数器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: eye</span><br></pre></td></tr></table></figure></li><li><p>安装其他js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">fastclick: true</span><br><span class="line">$ cd themes/next</span><br><span class="line">$ git clone https://github.com/theme-next/theme-next-fastclick source/lib/fastclick</span><br><span class="line"></span><br><span class="line">lazyload: true</span><br><span class="line">$ cd themes/next</span><br><span class="line">$ git clone https://github.com/theme-next/theme-next-jquery-lazyload source/lib/jquery_lazyload</span><br><span class="line"></span><br><span class="line">pace: true</span><br><span class="line">$ cd themes/next</span><br><span class="line">$ git clone https://github.com/theme-next/theme-next-pace source/lib/pace</span><br></pre></td></tr></table></figure></li></ol><p>等等……</p><h3 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h3><ol><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search</span><br><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure></li><li><p>修改hexo配置<br>根目录下<code>_config.yml</code>中增加如下配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li><li><p>配置next中的搜索入口<br>打开<code>themes/next/_config.yml</code>，修改配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  trigger: auto</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure></li></ol><p>参考链接：<a href="https://www.jianshu.com/p/5b62c01c4dfa" target="_blank" rel="noopener">为hexo和next增加站内搜索功能</a></p><h3 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h3><p>把Jekyll目录下的_posts中文章全部复制到Hexo目录下的source/_posts中，并把文章名统一为<code>:year-:month-:day-:title.md</code>，需要注意的是<code>_</code>开头的文章不会显示，最后修改文章参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: blog title</span><br><span class="line">date: YYYY-MM-DD HH:mm:ss </span><br><span class="line">categories: misc</span><br><span class="line">tags: [tag1, tag2]</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>文章太长则需要手动添加<code>&lt;!-- more --&gt;</code>以显示<code>阅读全文</code>。</p><h3 id="部署-Git"><a href="#部署-Git" class="headerlink" title="部署 (Git)"></a>部署 (Git)</h3><p>部署前可以先本地运行试看效果，在根目录运行服务器命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$hexo server 简写 hexo s</span><br></pre></td></tr></table></figure></p><p>然后打开浏览器访问查看博客（默认：<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ）</p><p>本地试运行的博客没有问题后就可以去部署到Github上了。</p><ol><li><p>本地配置deploy,打开根目录<code>_config.yml</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  - type: git</span><br><span class="line">    repo: git@github.com:blackchy/blackchy.github.io.git</span><br><span class="line">    branch: [master]</span><br><span class="line">    message: a commit message</span><br></pre></td></tr></table></figure></li><li><p>安装hexo-deployer-git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>执行部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure></li></ol><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>由于Jekyll上传github服务器会自动生成并部署，而Hexo需要本地生成静态文件再上传，所以需要另起一个分支存放hexo源码。</li><li>通过git克隆下来的theme、js，删除对应的.git文件夹。</li></ul><hr><p><b>至此，迁移完毕。</b></p>]]></content>
      
      
      <categories>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jekyll </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>String 相关</title>
      <link href="/2018/11/30/2018-11-30-String-About/"/>
      <url>/2018/11/30/2018-11-30-String-About/</url>
      
        <content type="html"><![CDATA[<p>Android中String相关的操作，把它们记录下来。<br><a id="more"></a></p><h3 id="修改部分字体大小"><a href="#修改部分字体大小" class="headerlink" title="修改部分字体大小"></a>修改部分字体大小</h3><p>原字体：<font size="4">字体大小改变</font> &nbsp;&nbsp;修改后：<font size="4">字体大小改</font> <font size="2">变</font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CharSequence charSequence1 = &quot;字体改变大小&quot;;</span><br><span class="line">SpannableString spannableString = new SpannableString(charSequence1);</span><br><span class="line">  spannableString.setSpan(new RelativeSizeSpan(0.5f), charSequence1.length() - 1,</span><br><span class="line">  charSequence1.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class="line">tvTitle.setText(spannableString);</span><br></pre></td></tr></table></figure></p><h3 id="修改部分字体颜色"><a href="#修改部分字体颜色" class="headerlink" title="修改部分字体颜色"></a>修改部分字体颜色</h3><p>原字体：<font size="4">字体改变颜色</font> &nbsp;&nbsp;修改后：<font size="4">字体改变颜</font> <font size="4" color="#FFB72B">色</font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CharSequence charSequence = &quot;字体改变颜色&quot;;</span><br><span class="line">SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(charSequence);</span><br><span class="line">spannableStringBuilder.setSpan(</span><br><span class="line">  new ForegroundColorSpan(getResources().getColor(R.color.gl_vip_up)),</span><br><span class="line">  spannableStringBuilder.length() - 1, spannableStringBuilder.length(),</span><br><span class="line">  Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class="line">tvTitle.setText(spannableStringBuilder);</span><br></pre></td></tr></table></figure></p><p>注：待补充</p>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> string </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git:操作和问题的收集</title>
      <link href="/2018/09/17/2018-09-17-Git-Operations-Problem/"/>
      <url>/2018/09/17/2018-09-17-Git-Operations-Problem/</url>
      
        <content type="html"><![CDATA[<p>Git是一个很好的工具，偶尔想用某个命令的时候却突然忘记了:(，网上再去查找又有点浪费时间，所以收集了一些常用的命令，顺带一些其他相关的东西。<br><a id="more"></a></p><h3 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h3><p>Git安装、配置等教程省略，网上搜索。</p><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p>Github上创建空项目会提示如何初步使用</p><p><img src="/uploads/git-operation-probem/img_git_new_repository.jpg" alt="img"></p><h3 id="Git操作收集"><a href="#Git操作收集" class="headerlink" title="Git操作收集"></a>Git操作收集</h3><ol><li><p>git变基</p><p> 在需要变基的分支上：</p><p> <code>#git rebase &lt;other branch&gt;</code></p><p> 如果有冲突，解决冲突后</p><p> <code>#git rebase --continue</code></p></li><li><p>git合并commit并强推</p><p> 查看有几笔提交    </p><p> <code>#git log</code> </p><p> 编辑commit（n为commit数量）</p><p> <code>#git rebase -i HEAD~n</code>  </p><p> 强推到远程</p><p> <code>#git push -f origin chy/add-market</code></p><p> 终止rebase</p><p> <code>#git rebase --abort</code> </p></li><li><p>git合并分支到new主分支</p><p> <code>#git rebase -i new-master</code></p></li><li><p>git合并其他分支到当前分支</p><p> <code>#git merge &lt;other branch&gt;</code></p><p> 如果没有冲突，直接就完成了</p><p> 如果有冲突，则解决冲突，然后执行：</p><p> <code>#git add .</code></p><p> <code>#git commit</code></p></li><li><p>git回到之前的节点</p><p> (首先<code>#git log</code>查看节点)</p><p> 回到节点06b3680，并保留更改</p><p> <code>#git reset --soft 06b3680</code></p><p> 回到节点06b3680，并丢弃修改</p><p> <code>#git reset --hard 06b3680</code></p></li><li><p>git获取远程分支</p><p><code>#git fetch</code></p><p><code>#git checkout -b local-branchname origin/remote_branchname</code></p></li><li><p>git强制覆盖本地文件</p><p> <code>#git fetch --all</code></p><p> <code>#git reset --hard origin/master</code></p><p> <code>#git pull</code></p></li><li><p>git强制跳转到某个版本</p><p> 查看所有的commit</p><p> <code>git log -g</code></p><p> 强制跳转到某个commit版本</p><p> <code>git reset --hard d87da1f81de631fbe68c60c1e192aebce5a3cc72</code></p></li><li><p>git提交、拉取、推送</p><p> 提交全部</p><p> <code>#git add -A</code></p><p> <code>#git commit -m &quot;Your mark!&quot;</code></p><p> 拉取同步远程仓库master分支</p><p> <code>#git pull origin master</code></p><p> 推送到远程仓库master分支</p><p> <code>#git push origin master</code></p></li><li><p>git修改远程仓库地址</p><p><code>#git remote set-url origin http://xxxxx.git</code></p></li><li><p>git暂存文件</p><p>将文件放入暂存区</p><p><code>#git stash</code></p><p>弹出暂存区的文件</p><p><code>#git stash pop</code></p><p>丢弃暂存区的文件</p><p><code>#git stash drop</code></p></li></ol><h3 id="Git问题收集"><a href="#Git问题收集" class="headerlink" title="Git问题收集"></a>Git问题收集</h3><ol><li><p><code>error: RPC failed; result=22, HTTP code = 411</code></p><p> <code>fatal: The remote end hung up unexpectedly</code></p><p> <code>fatal: The remote end hung up unexpectedly</code></p><p> 这个是因为http buffer不够造成的，可以简单配置git来解决：</p><p> git config http.postBuffer 67108864 2.想要把已经push的文件（夹）加入到.ignore中 <br> 直接添加到.ignore中是不能成功的，因为已经push到服务器了，需要先删除本地缓存的文件：</p><p> git rm -r –cached .idea 然后再将其添加到.ignore中，最后git push就ok了</p><p> 有些文件无法删除，比如sh.exe.stackdump，亦可用此法。</p><p> 修正：</p><p> 处理sh.exe.stackdump文件方法：</p><ol><li><p>关闭SourceTree</p></li><li><p>AndroidStudio中删除sh.exe.stackdump文件</p></li><li><p>再进行git相关操作，不会因为sh.exe.stackdump文件而出现问题</p></li></ol></li><li><p><code>fatal: Unable to create &#39;/.git/index.lock&#39;: File exists.</code></p><p> 解决办法：</p><p> <code>$rm -f ./.git/index.lock</code></p><p> <code>In your repository directory.</code></p></li></ol><h3 id="Pro-Git-中文版-链接"><a href="#Pro-Git-中文版-链接" class="headerlink" title="Pro Git(中文版) 链接"></a>Pro Git(中文版) 链接</h3><p><a href="https://gitee.com/progit/index.html" target="_blank" rel="noopener">Pro Git(中文版)</a></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>GitHub Pages与阿里云域名的绑定</title>
      <link href="/2018/09/15/2018-09-15-GitHubPages-Binding-Aliyun/"/>
      <url>/2018/09/15/2018-09-15-GitHubPages-Binding-Aliyun/</url>
      
        <content type="html"><![CDATA[<p>搭建好自己的个人博客过后，会发现博客的访问地址是github.io后缀，于是我在阿里云买了一个域名，并把这个域名指向了我的博客服务器地址。<br><a id="more"></a></p><h3 id="获取github-pages的ip地址"><a href="#获取github-pages的ip地址" class="headerlink" title="获取github pages的ip地址"></a>获取github pages的ip地址</h3><p><img src="/uploads/githubpages-binding-aliyun/ping.png" alt="img"></p><h3 id="配置阿里云域名解析"><a href="#配置阿里云域名解析" class="headerlink" title="配置阿里云域名解析"></a>配置阿里云域名解析</h3><p><img src="/uploads/githubpages-binding-aliyun/peiz0.png" alt="img"></p><p><img src="/uploads/githubpages-binding-aliyun/peiz.png" alt="img"></p><h3 id="配置github-pages的custom-domain"><a href="#配置github-pages的custom-domain" class="headerlink" title="配置github pages的custom domain"></a>配置github pages的custom domain</h3><p>进入github pages项目的设置，将解析的域名地址添加到custom domain中并保存。</p><p><img src="/uploads/githubpages-binding-aliyun/setting.png" alt="img"></p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>blog : <a href="http://blackchy.com">blackchy’s blog</a></p>]]></content>
      
      
      <categories>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Github个人博客创建流程</title>
      <link href="/2018/09/15/2018-09-15-Github-Person-Blog-Create/"/>
      <url>/2018/09/15/2018-09-15-Github-Person-Blog-Create/</url>
      
        <content type="html"><![CDATA[<p>有些有价值的东西我想把它记录下来，所以拥有自己的博客方便记录它们是一件非常令人高兴的事。Github Pages提供了自己搭建服务器的渠道，由Github提供的博客服务器是免费且不限空间的。以下是我在网上慢慢查找的搭建博客的简略流程。<br><a id="more"></a></p><h3 id="注册登录github帐号。"><a href="#注册登录github帐号。" class="headerlink" title="注册登录github帐号。"></a>注册登录github帐号。</h3><p><a href="https://github.com/" target="_blank" rel="noopener">Github</a></p><p>具体注册登录等流程网上搜索，这里不作阐述。</p><h3 id="创建博客项目"><a href="#创建博客项目" class="headerlink" title="创建博客项目"></a>创建博客项目</h3><p><img src="/uploads/github-person-blog-create/new_repository.jpg" alt="img"></p><p>在github新建一个repository,这里的Repository name输入自己github账号的username，比如blackchy，之后会成功创建一个项目<code>xxx.github.io</code>，然后<code>https://xxx.github.io</code>就是个人博客的网址。</p><p><img src="/uploads/github-person-blog-create/repository_settings.jpg" alt="img"></p><p>在<code>xxx.github.io</code>项目点进Settings，找到GitHub Pages模块，Theme Chooser可以选择一个博客的主题，不过一般都是在jekyll或其他地方寻找合适的主题，下面会简单介绍jekyll。Custom domain可以修改博客地址，如果有自己的个人域名可以修改成自己的域名网址，而不用<code>https://xxx.github.io</code>作为博客地址。</p><h3 id="设计自己的博客网站"><a href="#设计自己的博客网站" class="headerlink" title="设计自己的博客网站"></a>设计自己的博客网站</h3><p>可以自己写一个html网站作为博客网站，但是那样对非专业人士、懒人等来说不太友好，所以推荐使用别人写好的模板直接下载下来使用，选择的时候尽量选可塑性较强的模板，以便后面进行修改。jekyll模板地址如下：</p><p><a href="http://jekyllthemes.org/" target="_blank" rel="noopener">http://jekyllthemes.org/</a></p><p><img src="/uploads/github-person-blog-create/jekyll_demos.jpg" alt="img"></p><p>下载安装桌面github以便对项目进行管理，地址如下：</p><p>Windows：<br><a href="https://windows.github.com/" target="_blank" rel="noopener">https://windows.github.com/</a></p><p>Mac：<br><a href="https://mac.github.com/" target="_blank" rel="noopener">https://mac.github.com/</a></p><p>把github上的<code>xxx.github.io</code>项目克隆到本地，然后下载选择好的模板。<br>删除掉本地项目的所有文件和文件夹(.git文件夹除外)，然后把模板的所有文件和文件夹复制到本地项目中，然后commit并推到github远程仓库，大概几秒到1分钟内，刷新<code>https://xxx.github.io</code>网页就能看到已经复制过来的网站了。</p><p>最后，修改一下模板里面的信息再更新，这就是一个完全属于自己的个人博客了。</p><p>注：一般博客都是放在posts这个文件夹，用markdown写的，弄好自己的博客网站之后就可以开心地更新博客了。</p>]]></content>
      
      
      <categories>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
